import numpy as np
from numpy import sin, cos, pi
import sys

ROBOT_RADIUS = 127.5
motor_angles = np.array([pi/4, 3*pi/4, -3*pi/4, -pi/4])



def generate_txt(angles, radius):
    D = np.array([-sin(angles), cos(angles), np.ones(len(angles))*radius]).transpose()
    Dinv = np.linalg.pinv(D)

    txt = ""

    txt += "// DO NOT EDIT THIS FILE\n// File generated by cfg/conf.py"

    txt += "#pragma once\n\n"

    txt += "#include <Eigen/LU>\n\n"

    txt += f"constexpr double ROBOT_RADIUS = {radius};\n\n"

    txt += f"constexpr uint8_t MOTORS_NB = {len(angles)};\n\n"

    txt += f"static constexpr Eigen::Matrix<double, MOTORS_NB, 3> D {{\n"
    for s,c,r in D:
        txt += f"  {{{s}, {c}, {r}}},\n"
    txt += "};\n\n"
    

    txt += f"static constexpr Eigen::Matrix<double, 3, MOTORS_NB> Dinv {{\n"
    for a,b,c,d in Dinv:
        txt += f"  {{{a}, {b}, {c}, {d}}},\n"
    txt += "};\n\n"

    return txt




def generate_file(filename, angles, radius):
    with open(filename, 'w') as fic:
        txt = generate_txt(angles, radius)
        fic.write(txt)


generate_file(sys.argv[1], motor_angles, ROBOT_RADIUS)
